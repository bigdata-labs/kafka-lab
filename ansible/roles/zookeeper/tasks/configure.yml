---

- name: Copy AWS autodiscover script
  become: yes
  become_user: "{{ zookeeper.user }}"
  copy:
    src: aws_cluster_autodiscover
    dest: "/home/{{ zookeeper.user }}/bin/aws_cluster_autodiscover"
    owner: "{{ zookeeper.user }}"
    group: "{{ zookeeper.group }}"
    mode: 0750
  when: zookeeper.aws_cluster_autodiscover.enabled

- name: Run AWS autodiscover script and grab ID
  become: yes
  become_user: "{{ zookeeper.user }}"
  command: "./aws_cluster_autodiscover {{ zookeeper.hosts | join(',') }} {{ zookeeper.aws_cluster_autodiscover.r53_zone_id }} \"{{ zookeeper.aws_cluster_autodiscover.lookup_filter }}\" {{ zookeeper.aws_cluster_autodiscover.id_tag_name}}"
  args:
    chdir: "/home/{{ zookeeper.user }}/bin"
  register: aws_cluster_autodiscover
  when: zookeeper.aws_cluster_autodiscover.enabled

- name: Set autodiscover id based AWS autodiscover script
  set_fact:
    zookeeper:
      aws_cluster_autodiscover:
        data: "{{ aws_cluster_autodiscover.stdout | from_json }}"
  when: zookeeper.aws_cluster_autodiscover.enabled

- name: Setup myid
  become: yes
  become_user: "{{ zookeeper.user }}"
  template:
    dest: "{{ zookeeper.data_dir }}/myid"
    src: myid.j2
  notify:
   - restart zookeeper

- name: Setup zoo.cfg file
  become: yes
  become_user: "{{ zookeeper.user }}"
  template:
    dest: "{{ zookeeper.conf_dir }}/zoo.cfg"
    mode: 0644
    src: zoo.cfg.j2
  notify:
   - restart zookeeper

- name: Create Zookeeper log4j config
  become: yes
  become_user: "{{ zookeeper.user }}"
  template:
    dest: "{{ zookeeper.conf_dir }}/log4j.properties"
    mode: 0644
    src: log4j.properties.j2
  notify:
    - restart zookeeper

- name: Setup Zookeeper environment config
  become: yes
  become_user: "{{ zookeeper.user }}"
  template:
    dest: "{{ zookeeper.conf_dir }}/environment"
    mode: 0644
    src: environment.j2
  notify:
    - restart zookeeper

- name: Start Zookeeper service
  become: yes
  service:
    name: zookeeper
    state: started

- name: Flush handlers to ensure Zookeeper is up to date
  meta: flush_handlers

- name: Wait for Zookeeper port
  wait_for:
    port: "{{ zookeeper.client_port }}"
    state: started
    timeout: 30
