input{
        file {
                type=> "nginx-access"
                path => "/data/logs/2015"
                start_position => beginning
                sincedb_path => "/usr/local/logstash/conf/.sincedb-file"
        }
        tcp {  
            port => 5000  
            type => syslog  
        }  
        udp {  
            port => 5000  
            type => syslog  
        }  
}
filter {
    if [type] == "nginx-access" { 
        grok {
            match => { "message" => '%{IPORHOST:clientip} %{NOTSPACE:ident} %{NOTSPACE:auth} \[%{HTTPDATE:timestamp}\] "%{WORD:verb} /content/groups/public/(?<groupstr>\S+)\/(?<artifacts>\S+\.jar) HTTP/%{NUMBER:httpversion}" %{NUMBER:response} (?:%{NUMBER:bytes}|-) (?:"(?:%{URI:referrer}|-)"|%{QS:referrer}) %{QS:agent}'}
            add_field => {
                     "isSourceJar" => false
                     "isJavaDoc" => false
                     "isPureJar"  => false
                }
        }
        if [artifacts] and [groupstr] {
          ruby {    
              code => '
                    groupstr = event["groupstr"]
                    artifacts = event["artifacts"]
                    event["artifactVersion"] = groupstr.split("/")[-1]
                    event["group"] =  groupstr.split("/")[0, groupstr.split("/").size() -2].join(".")
                    event["artifact"] = groupstr.split("/")[-2]
                    event["isSourceJar"] = artifacts.include?("-sources.jar")
                    event["isJavaDoc"] = artifacts.include?("-javadoc.jar")
                    event["isPureJar"] = !event["isSourceJar"] && !event["isJavaDoc"]
                    '
          }
        }
        date {
          match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss +0800" ]
          timezone => "UTC"
        }
        geoip {
            source => "clientip"
        }
        useragent {
          source => "agent"
        }
        mutate {
          convert => ["response", "integer"]
          convert => ["bytes", "integer"]
          convert => ["responsetime", "float"]
        }

    }
    if [type] == "syslog" {  
        grok {  
          match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:)?: %{GREEDYDATA:syslog_message}" }  
          add_field => [ "received_at", "%{@timestamp}" ]  
          add_field => [ "received_from", "%{host}" ]  
        }  
        syslog_pri { }  
        date {  
          match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]  
        }  
    }  

}
output {
   elasticsearch {
        hosts =>  ["http://log:9200/"]
        index => "logstash-index-name-%{+YYYY.MM.dd}"
        document_type => "access-logs"
   }
   stdout {}
}
