---
- hosts: log
  sudo: yes
  vars:
    - user: cloud
    - group: users
    ##python -c 'import crypt; print crypt.crypt("cloud", "$1$SomeSalt$")'
    - password: $1$SomeSalt$15avH4qSlfRSEvC0bIn2./

  tasks:
    - include: tasks/create-swap-space.yml
    - include: tasks/common.yml
    - include: tasks/jdk8.yml



    # - name: copy flume
    #   copy: src="./files/flume/apache-flume-1.6.0-bin.tar.gz" dest="/tmp" owner={{ user }} group={{ group }}
    # - name: unarchive flume
    #   unarchive: src="/tmp/apache-flume-1.6.0-bin.tar.gz" dest="/usr/local/" owner={{ user }} group={{ group }} copy=no
    # - file: src="/usr/local/apache-flume-1.6.0-bin" dest="/usr/local/flume" owner={{ user }} group={{ group }} state=link
    # - lineinfile: dest='/etc/profile' line='export FLUME_HOME=/usr/local/flume' state=present
    # - lineinfile: dest='/etc/profile' line='export PATH="$PATH:$FLUME_HOME/bin"' state=present
    #
    # - name: conf flume
    #   copy: src="./files/flume/conf/" dest="/usr/local/flume/conf/" owner={{ user }} group={{ group }}

    - name: copy logstash
      copy: src="./files/logstash/logstash-2.3.2.tar.gz" dest="/tmp" owner={{ user }} group={{ group }}
    - name: unarchive logstash
      unarchive: src="/tmp/logstash-2.3.2.tar.gz" dest="/usr/local/" owner={{ user }} group={{ group }} copy=no
    - file: src="/usr/local/logstash-2.3.2" dest="/usr/local/logstash" owner={{ user }} group={{ group }} state=link
    - name: conf logstash
      copy: src="./files/logstash/conf/" dest="/usr/local/logstash/conf/" owner={{ user }} group={{ group }}


    - name: copy kibana
      copy: src="./files/kibana/kibana-4.5.1-linux-x64.tar.gz" dest="/tmp" owner={{ user }} group={{ group }}
    - name: unarchive elasticsearch
      unarchive: src="/tmp/kibana-4.5.1-linux-x64.tar.gz" dest="/usr/local/" owner={{ user }} group={{ group }} copy=no
    - file: src="/usr/local/kibana-4.5.1-linux-x64" dest="/usr/local/kibana" owner={{ user }} group={{ group }} state=link
    - name: conf kibana
      copy: src="./files/kibana/config/" dest="/usr/local/kibana/config/" owner={{ user }} group={{ group }}
    - name: start kibana
      shell: "sudo su - {{user}} -c '/usr/local/kibana/bin/kibana &'"
      ignore_errors: yes

    - name: copy elasticsearch
      copy: src="./files/elasticsearch/elasticsearch-2.3.3.zip" dest="/tmp" owner={{ user }} group={{ group }}
    - name: unarchive elasticsearch
      unarchive: src="/tmp/elasticsearch-2.3.3.zip" dest="/usr/local/" owner={{ user }} group={{ group }} copy=no
    - file: src="/usr/local/elasticsearch-2.3.3" dest="/usr/local/elasticsearch" owner={{ user }} group={{ group }} state=link
    - name: conf elasticsearch
      copy: src="./files/elasticsearch/config/" dest="/usr/local/elasticsearch/config/" owner={{ user }} group={{ group }}

    - name: install head plugin
      shell: "sudo su - {{user}} -c '/usr/local/elasticsearch/bin/plugin install mobz/elasticsearch-head'"
      ignore_errors: yes

    - name: create log directory
      file: path=/var/log/elasticsearch/logs state=directory mode=0755  owner={{ user }} group={{ group }}


    - name: start elasticsearch
      shell: "sudo su - {{user}} -c '/usr/local/elasticsearch/bin/elasticsearch -d '"
      ignore_errors: yes







    # - name: run monitor
    #   shell: "sudo su - {{user}} -c 'java -cp /home/{{user}}/KafkaOffsetMonitor-assembly-0.2.1.jar com.quantifind.kafka.offsetapp.OffsetGetterWeb --zk zookeeper3,zookeeper2,zookeeper1/kafka --port 8086 --refresh 10.seconds --retain 2.days'"
